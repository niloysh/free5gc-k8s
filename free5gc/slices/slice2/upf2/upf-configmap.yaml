apiVersion: v1
kind: ConfigMap
metadata:
  name: upf2-configmap
  labels:
    app: free5gc
    nf: upf
    name: upf2
data:
  upfcfg.yaml: |
    version: 1.0.3
    description: UPF initial local configuration

    # The listen IP and nodeID of the N4 interface on this UPF (Can't set to 0.0.0.0)
    pfcp:
      addr: 10.10.4.2   # IP addr for listening
      nodeID: 10.10.4.2 # External IP or FQDN can be reached
      retransTimeout: 1s # retransmission timeout
      maxRetrans: 3 # the max number of retransmission

    gtpu:
      forwarder: gtp5g
      # The IP list of the N3/N9 interfaces on this UPF
      # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
      ifList:
        - addr: 10.10.3.2
          type: N3
          # name: upf.5gc.nctu.me
          ifname: upf2gtp

    # The DNN list supported by UPF
    dnnList:
      - dnn: streaming # Data Network Name
        cidr: 10.2.0.0/16 # Classless Inter-Domain Routing for assigned IPv4 pool of UE
        # natifname: eth0

    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false

  wrapper.sh: |
    #!/bin/bash

    ### Implement networking rules
    iptables -A FORWARD -j ACCEPT
    iptables -t nat -A POSTROUTING -s 10.2.0.0/16 -o eth0 -j MASQUERADE  # route traffic comming from the UE SUBNET to the interface N6    

    /free5gc/upf --config /free5gc/config/upfcfg.yaml